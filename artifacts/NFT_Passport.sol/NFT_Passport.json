{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_verificationContract",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verificationContract",
      "outputs": [
        {
          "internalType": "contract IVerification",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611ef7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde14610280578063c4d66de814610293578063c87b56dd146102a6578063d204c45e146102b9578063e985e9c5146102cc578063f2fde38b1461030857600080fd5b8063715018a6146102395780637e222661146102415780638da5cb5b1461025457806395d89b4114610265578063a22cb4651461026d57600080fd5b806323b872dd116100ff57806323b872dd146101cc57806342842e0e146101df57806342966c68146101f25780636352211e1461020557806370a082311461021857600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806320c5429b146101b9575b600080fd5b61014f61014a36600461188c565b61031b565b60405190151581526020015b60405180910390f35b61016c61036d565b60405161015b91906118f9565b61018c61018736600461190c565b6103ff565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611941565b610426565b005b6101b76101c736600461190c565b610540565b6101b76101da36600461196b565b610554565b6101b76101ed36600461196b565b610585565b6101b761020036600461190c565b6105a0565b61018c61021336600461190c565b61060c565b61022b6102263660046119a7565b61066c565b60405190815260200161015b565b6101b76106f2565b60fc5461018c906001600160a01b031681565b60c9546001600160a01b031661018c565b61016c610706565b6101b761027b3660046119d0565b610715565b6101b761028e366004611a93565b610724565b6101b76102a13660046119a7565b61075c565b61016c6102b436600461190c565b6108e4565b6101b76102c7366004611b0f565b6108ef565b61014f6102da366004611b71565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6101b76103163660046119a7565b6109f3565b60006001600160e01b031982166380ac58cd60e01b148061034c57506001600160e01b03198216635b5e139f60e01b145b8061036757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461037c90611ba4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611ba4565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b5050505050905090565b600061040a82610a69565b506000908152606960205260409020546001600160a01b031690565b60006104318261060c565b9050806001600160a01b0316836001600160a01b0316036104a35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104bf57506104bf81336102da565b6105315760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161049a565b61053b8383610ac8565b505050565b610548610b36565b61055181610b90565b50565b61055e3382610b99565b61057a5760405162461bcd60e51b815260040161049a90611bde565b61053b838383610c18565b61053b83838360405180602001604052806000815250610724565b336105aa8261060c565b6001600160a01b0316146105485760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206f776e6572206f662074686520746f6b656e2063616e206275726e604482015262081a5d60ea1b606482015260840161049a565b6000818152606760205260408120546001600160a01b0316806103675760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161049a565b60006001600160a01b0382166106d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161049a565b506001600160a01b031660009081526068602052604090205490565b6106fa610b36565b6107046000610d91565b565b60606066805461037c90611ba4565b610720338383610de3565b5050565b61072e3383610b99565b61074a5760405162461bcd60e51b815260040161049a90611bde565b61075684848484610eb1565b50505050565b600054610100900460ff161580801561077c5750600054600160ff909116105b806107965750303b158015610796575060005460ff166001145b6107f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049a565b6000805460ff19166001179055801561081c576000805461ff0019166101001790555b61087060405180604001604052806015815260200174165bdd5c94dbdd5b189bdd5b9914185cdcdc1bdc9d605a1b815250604051806040016040528060058152602001641414d4149560da1b815250610ee4565b610878610f15565b610880610f3c565b60fc80546001600160a01b0319166001600160a01b0384161790558015610720576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b606061036782610f6b565b6108f7610b36565b60fc546040516371aff1b360e11b81526001600160a01b0384811660048301529091169063e35fe36690602401602060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611c2b565b6109c45760405162461bcd60e51b815260206004820152602a60248201527f43616e2774206d696e742070617373706f727420746f204e4f542076657269666044820152696965642075736572732160b01b606482015260840161049a565b60006109cf60fb5490565b90506109df60fb80546001019055565b6109e98382611073565b61053b818361108d565b6109fb610b36565b6001600160a01b038116610a605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049a565b61055181610d91565b6000818152606760205260409020546001600160a01b03166105515760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161049a565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610afd8261060c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c9546001600160a01b031633146107045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049a565b61055181611120565b600080610ba58361060c565b9050806001600160a01b0316846001600160a01b03161480610bec57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610c105750836001600160a01b0316610c05846103ff565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c2b8261060c565b6001600160a01b031614610c515760405162461bcd60e51b815260040161049a90611c48565b6001600160a01b038216610cb35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161049a565b610cc08383836001611160565b826001600160a01b0316610cd38261060c565b6001600160a01b031614610cf95760405162461bcd60e51b815260040161049a90611c48565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a461053b83838360016111c2565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e445760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161049a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ebc848484610c18565b610ec884848484611255565b6107565760405162461bcd60e51b815260040161049a90611c8d565b600054610100900460ff16610f0b5760405162461bcd60e51b815260040161049a90611cdf565b6107208282611356565b600054610100900460ff166107045760405162461bcd60e51b815260040161049a90611cdf565b600054610100900460ff16610f635760405162461bcd60e51b815260040161049a90611cdf565b610704611396565b6060610f7682610a69565b60008281526097602052604081208054610f8f90611ba4565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbb90611ba4565b80156110085780601f10610fdd57610100808354040283529160200191611008565b820191906000526020600020905b815481529060010190602001808311610feb57829003601f168201915b50505050509050600061102660408051602081019091526000815290565b90508051600003611038575092915050565b81511561106a578082604051602001611052929190611d2a565b60405160208183030381529060405292505050919050565b610c10846113c6565b61072082826040518060200160405280600081525061143a565b6000828152606760205260409020546001600160a01b03166111085760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161049a565b600082815260976020526040902061053b8282611da7565b6111298161146d565b6000818152609760205260409020805461114290611ba4565b15905061055157600081815260976020526040812061055191611828565b6001600160a01b038416158061117d57506001600160a01b038316155b6107565760405162461bcd60e51b81526020600482015260166024820152756f6e6c79206275726e696e672026206d696e74696e6760501b604482015260640161049a565b6001600160a01b03841661120b5760405182906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3610756565b6001600160a01b0383166107565760405182906001600160a01b038516907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a350505050565b60006001600160a01b0384163b1561134b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611299903390899088908890600401611e67565b6020604051808303816000875af19250505080156112d4575060408051601f3d908101601f191682019092526112d191810190611ea4565b60015b611331573d808015611302576040519150601f19603f3d011682016040523d82523d6000602084013e611307565b606091505b5080516000036113295760405162461bcd60e51b815260040161049a90611c8d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c10565b506001949350505050565b600054610100900460ff1661137d5760405162461bcd60e51b815260040161049a90611cdf565b60656113898382611da7565b50606661053b8282611da7565b600054610100900460ff166113bd5760405162461bcd60e51b815260040161049a90611cdf565b61070433610d91565b60606113d182610a69565b60006113e860408051602081019091526000815290565b905060008151116114085760405180602001604052806000815250611433565b806114128461151a565b604051602001611423929190611d2a565b6040516020818303038152906040525b9392505050565b61144483836115ad565b6114516000848484611255565b61053b5760405162461bcd60e51b815260040161049a90611c8d565b60006114788261060c565b9050611488816000846001611160565b6114918261060c565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a46107208160008460016111c2565b6060600061152783611750565b600101905060008167ffffffffffffffff81111561154757611547611a07565b6040519080825280601f01601f191660200182016040528015611571576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461157b57509392505050565b6001600160a01b0382166116035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161049a565b6000818152606760205260409020546001600160a01b0316156116685760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161049a565b611676600083836001611160565b6000818152606760205260409020546001600160a01b0316156116db5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161049a565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46107206000838360016111c2565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061178f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117bb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117d957662386f26fc10000830492506010015b6305f5e10083106117f1576305f5e100830492506008015b612710831061180557612710830492506004015b60648310611817576064830492506002015b600a83106103675760010192915050565b50805461183490611ba4565b6000825580601f10611844575050565b601f01602090049060005260206000209081019061055191905b80821115611872576000815560010161185e565b5090565b6001600160e01b03198116811461055157600080fd5b60006020828403121561189e57600080fd5b813561143381611876565b60005b838110156118c45781810151838201526020016118ac565b50506000910152565b600081518084526118e58160208601602086016118a9565b601f01601f19169290920160200192915050565b60208152600061143360208301846118cd565b60006020828403121561191e57600080fd5b5035919050565b80356001600160a01b038116811461193c57600080fd5b919050565b6000806040838503121561195457600080fd5b61195d83611925565b946020939093013593505050565b60008060006060848603121561198057600080fd5b61198984611925565b925061199760208501611925565b9150604084013590509250925092565b6000602082840312156119b957600080fd5b61143382611925565b801515811461055157600080fd5b600080604083850312156119e357600080fd5b6119ec83611925565b915060208301356119fc816119c2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a3857611a38611a07565b604051601f8501601f19908116603f01168101908282118183101715611a6057611a60611a07565b81604052809350858152868686011115611a7957600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611aa957600080fd5b611ab285611925565b9350611ac060208601611925565b925060408501359150606085013567ffffffffffffffff811115611ae357600080fd5b8501601f81018713611af457600080fd5b611b0387823560208401611a1d565b91505092959194509250565b60008060408385031215611b2257600080fd5b611b2b83611925565b9150602083013567ffffffffffffffff811115611b4757600080fd5b8301601f81018513611b5857600080fd5b611b6785823560208401611a1d565b9150509250929050565b60008060408385031215611b8457600080fd5b611b8d83611925565b9150611b9b60208401611925565b90509250929050565b600181811c90821680611bb857607f821691505b602082108103611bd857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060208284031215611c3d57600080fd5b8151611433816119c2565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351611d3c8184602088016118a9565b835190830190611d508183602088016118a9565b01949350505050565b601f82111561053b57600081815260208120601f850160051c81016020861015611d805750805b601f850160051c820191505b81811015611d9f57828155600101611d8c565b505050505050565b815167ffffffffffffffff811115611dc157611dc1611a07565b611dd581611dcf8454611ba4565b84611d59565b602080601f831160018114611e0a5760008415611df25750858301515b600019600386901b1c1916600185901b178555611d9f565b600085815260208120601f198616915b82811015611e3957888601518255948401946001909101908401611e1a565b5085821015611e575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e9a908301846118cd565b9695505050505050565b600060208284031215611eb657600080fd5b81516114338161187656fea2646970667358221220dd0aa260fc21cca3b2c100e42f1a46fadbd07a7711de5c96d22f2eba7806038464736f6c63430008120033",
    "sourceMap": "510:2387:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde14610280578063c4d66de814610293578063c87b56dd146102a6578063d204c45e146102b9578063e985e9c5146102cc578063f2fde38b1461030857600080fd5b8063715018a6146102395780637e222661146102415780638da5cb5b1461025457806395d89b4114610265578063a22cb4651461026d57600080fd5b806323b872dd116100ff57806323b872dd146101cc57806342842e0e146101df57806342966c68146101f25780636352211e1461020557806370a082311461021857600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806320c5429b146101b9575b600080fd5b61014f61014a36600461188c565b61031b565b60405190151581526020015b60405180910390f35b61016c61036d565b60405161015b91906118f9565b61018c61018736600461190c565b6103ff565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611941565b610426565b005b6101b76101c736600461190c565b610540565b6101b76101da36600461196b565b610554565b6101b76101ed36600461196b565b610585565b6101b761020036600461190c565b6105a0565b61018c61021336600461190c565b61060c565b61022b6102263660046119a7565b61066c565b60405190815260200161015b565b6101b76106f2565b60fc5461018c906001600160a01b031681565b60c9546001600160a01b031661018c565b61016c610706565b6101b761027b3660046119d0565b610715565b6101b761028e366004611a93565b610724565b6101b76102a13660046119a7565b61075c565b61016c6102b436600461190c565b6108e4565b6101b76102c7366004611b0f565b6108ef565b61014f6102da366004611b71565b6001600160a01b039182166000908152606a6020908152604080832093909416825291909152205460ff1690565b6101b76103163660046119a7565b6109f3565b60006001600160e01b031982166380ac58cd60e01b148061034c57506001600160e01b03198216635b5e139f60e01b145b8061036757506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606065805461037c90611ba4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a890611ba4565b80156103f55780601f106103ca576101008083540402835291602001916103f5565b820191906000526020600020905b8154815290600101906020018083116103d857829003601f168201915b5050505050905090565b600061040a82610a69565b506000908152606960205260409020546001600160a01b031690565b60006104318261060c565b9050806001600160a01b0316836001600160a01b0316036104a35760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104bf57506104bf81336102da565b6105315760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161049a565b61053b8383610ac8565b505050565b610548610b36565b61055181610b90565b50565b61055e3382610b99565b61057a5760405162461bcd60e51b815260040161049a90611bde565b61053b838383610c18565b61053b83838360405180602001604052806000815250610724565b336105aa8261060c565b6001600160a01b0316146105485760405162461bcd60e51b815260206004820152602360248201527f4f6e6c79206f776e6572206f662074686520746f6b656e2063616e206275726e604482015262081a5d60ea1b606482015260840161049a565b6000818152606760205260408120546001600160a01b0316806103675760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161049a565b60006001600160a01b0382166106d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161049a565b506001600160a01b031660009081526068602052604090205490565b6106fa610b36565b6107046000610d91565b565b60606066805461037c90611ba4565b610720338383610de3565b5050565b61072e3383610b99565b61074a5760405162461bcd60e51b815260040161049a90611bde565b61075684848484610eb1565b50505050565b600054610100900460ff161580801561077c5750600054600160ff909116105b806107965750303b158015610796575060005460ff166001145b6107f95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049a565b6000805460ff19166001179055801561081c576000805461ff0019166101001790555b61087060405180604001604052806015815260200174165bdd5c94dbdd5b189bdd5b9914185cdcdc1bdc9d605a1b815250604051806040016040528060058152602001641414d4149560da1b815250610ee4565b610878610f15565b610880610f3c565b60fc80546001600160a01b0319166001600160a01b0384161790558015610720576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b606061036782610f6b565b6108f7610b36565b60fc546040516371aff1b360e11b81526001600160a01b0384811660048301529091169063e35fe36690602401602060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190611c2b565b6109c45760405162461bcd60e51b815260206004820152602a60248201527f43616e2774206d696e742070617373706f727420746f204e4f542076657269666044820152696965642075736572732160b01b606482015260840161049a565b60006109cf60fb5490565b90506109df60fb80546001019055565b6109e98382611073565b61053b818361108d565b6109fb610b36565b6001600160a01b038116610a605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049a565b61055181610d91565b6000818152606760205260409020546001600160a01b03166105515760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161049a565b600081815260696020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610afd8261060c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60c9546001600160a01b031633146107045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049a565b61055181611120565b600080610ba58361060c565b9050806001600160a01b0316846001600160a01b03161480610bec57506001600160a01b038082166000908152606a602090815260408083209388168352929052205460ff165b80610c105750836001600160a01b0316610c05846103ff565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c2b8261060c565b6001600160a01b031614610c515760405162461bcd60e51b815260040161049a90611c48565b6001600160a01b038216610cb35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161049a565b610cc08383836001611160565b826001600160a01b0316610cd38261060c565b6001600160a01b031614610cf95760405162461bcd60e51b815260040161049a90611c48565b600081815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260688552838620805460001901905590871680865283862080546001019055868652606790945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a461053b83838360016111c2565b60c980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610e445760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161049a565b6001600160a01b038381166000818152606a6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610ebc848484610c18565b610ec884848484611255565b6107565760405162461bcd60e51b815260040161049a90611c8d565b600054610100900460ff16610f0b5760405162461bcd60e51b815260040161049a90611cdf565b6107208282611356565b600054610100900460ff166107045760405162461bcd60e51b815260040161049a90611cdf565b600054610100900460ff16610f635760405162461bcd60e51b815260040161049a90611cdf565b610704611396565b6060610f7682610a69565b60008281526097602052604081208054610f8f90611ba4565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbb90611ba4565b80156110085780601f10610fdd57610100808354040283529160200191611008565b820191906000526020600020905b815481529060010190602001808311610feb57829003601f168201915b50505050509050600061102660408051602081019091526000815290565b90508051600003611038575092915050565b81511561106a578082604051602001611052929190611d2a565b60405160208183030381529060405292505050919050565b610c10846113c6565b61072082826040518060200160405280600081525061143a565b6000828152606760205260409020546001600160a01b03166111085760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161049a565b600082815260976020526040902061053b8282611da7565b6111298161146d565b6000818152609760205260409020805461114290611ba4565b15905061055157600081815260976020526040812061055191611828565b6001600160a01b038416158061117d57506001600160a01b038316155b6107565760405162461bcd60e51b81526020600482015260166024820152756f6e6c79206275726e696e672026206d696e74696e6760501b604482015260640161049a565b6001600160a01b03841661120b5760405182906001600160a01b038516907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3610756565b6001600160a01b0383166107565760405182906001600160a01b038516907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a350505050565b60006001600160a01b0384163b1561134b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611299903390899088908890600401611e67565b6020604051808303816000875af19250505080156112d4575060408051601f3d908101601f191682019092526112d191810190611ea4565b60015b611331573d808015611302576040519150601f19603f3d011682016040523d82523d6000602084013e611307565b606091505b5080516000036113295760405162461bcd60e51b815260040161049a90611c8d565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c10565b506001949350505050565b600054610100900460ff1661137d5760405162461bcd60e51b815260040161049a90611cdf565b60656113898382611da7565b50606661053b8282611da7565b600054610100900460ff166113bd5760405162461bcd60e51b815260040161049a90611cdf565b61070433610d91565b60606113d182610a69565b60006113e860408051602081019091526000815290565b905060008151116114085760405180602001604052806000815250611433565b806114128461151a565b604051602001611423929190611d2a565b6040516020818303038152906040525b9392505050565b61144483836115ad565b6114516000848484611255565b61053b5760405162461bcd60e51b815260040161049a90611c8d565b60006114788261060c565b9050611488816000846001611160565b6114918261060c565b600083815260696020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526068845282852080546000190190558785526067909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a46107208160008460016111c2565b6060600061152783611750565b600101905060008167ffffffffffffffff81111561154757611547611a07565b6040519080825280601f01601f191660200182016040528015611571576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461157b57509392505050565b6001600160a01b0382166116035760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161049a565b6000818152606760205260409020546001600160a01b0316156116685760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161049a565b611676600083836001611160565b6000818152606760205260409020546001600160a01b0316156116db5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161049a565b6001600160a01b038216600081815260686020908152604080832080546001019055848352606790915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46107206000838360016111c2565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061178f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117bb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117d957662386f26fc10000830492506010015b6305f5e10083106117f1576305f5e100830492506008015b612710831061180557612710830492506004015b60648310611817576064830492506002015b600a83106103675760010192915050565b50805461183490611ba4565b6000825580601f10611844575050565b601f01602090049060005260206000209081019061055191905b80821115611872576000815560010161185e565b5090565b6001600160e01b03198116811461055157600080fd5b60006020828403121561189e57600080fd5b813561143381611876565b60005b838110156118c45781810151838201526020016118ac565b50506000910152565b600081518084526118e58160208601602086016118a9565b601f01601f19169290920160200192915050565b60208152600061143360208301846118cd565b60006020828403121561191e57600080fd5b5035919050565b80356001600160a01b038116811461193c57600080fd5b919050565b6000806040838503121561195457600080fd5b61195d83611925565b946020939093013593505050565b60008060006060848603121561198057600080fd5b61198984611925565b925061199760208501611925565b9150604084013590509250925092565b6000602082840312156119b957600080fd5b61143382611925565b801515811461055157600080fd5b600080604083850312156119e357600080fd5b6119ec83611925565b915060208301356119fc816119c2565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611a3857611a38611a07565b604051601f8501601f19908116603f01168101908282118183101715611a6057611a60611a07565b81604052809350858152868686011115611a7957600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611aa957600080fd5b611ab285611925565b9350611ac060208601611925565b925060408501359150606085013567ffffffffffffffff811115611ae357600080fd5b8501601f81018713611af457600080fd5b611b0387823560208401611a1d565b91505092959194509250565b60008060408385031215611b2257600080fd5b611b2b83611925565b9150602083013567ffffffffffffffff811115611b4757600080fd5b8301601f81018513611b5857600080fd5b611b6785823560208401611a1d565b9150509250929050565b60008060408385031215611b8457600080fd5b611b8d83611925565b9150611b9b60208401611925565b90509250929050565b600181811c90821680611bb857607f821691505b602082108103611bd857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060208284031215611c3d57600080fd5b8151611433816119c2565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351611d3c8184602088016118a9565b835190830190611d508183602088016118a9565b01949350505050565b601f82111561053b57600081815260208120601f850160051c81016020861015611d805750805b601f850160051c820191505b81811015611d9f57828155600101611d8c565b505050505050565b815167ffffffffffffffff811115611dc157611dc1611a07565b611dd581611dcf8454611ba4565b84611d59565b602080601f831160018114611e0a5760008415611df25750858301515b600019600386901b1c1916600185901b178555611d9f565b600085815260208120601f198616915b82811015611e3957888601518255948401946001909101908401611e1a565b5085821015611e575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e9a908301846118cd565b9695505050505050565b600060208284031215611eb657600080fd5b81516114338161187656fea2646970667358221220dd0aa260fc21cca3b2c100e42f1a46fadbd07a7711de5c96d22f2eba7806038464736f6c63430008120033",
    "sourceMap": "510:2387:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344:5;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1987:344:5;;;;;;;;2932:98;;;:::i;:::-;;;;;;;:::i;4407:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:17;;;1679:51;;1667:2;1652:18;4407:167:5;1533:203:17;3929:417:5;;;;;;:::i;:::-;;:::i;:::-;;1868:83:0;;;;;;:::i;:::-;;:::i;5084:326:5:-;;;;;;:::i;:::-;;:::i;5476:179::-;;;;;;:::i;:::-;;:::i;1704:159:0:-;;;;;;:::i;:::-;;:::i;2651:219:5:-;;;;;;:::i;:::-;;:::i;2390:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:17;;;2836:2;2821:18;2390:204:5;2702:177:17;2071:101:3;;;:::i;873:41:0:-;;;;;-1:-1:-1;;;;;873:41:0;;;1441:85:3;1513:6;;-1:-1:-1;;;;;1513:6:3;1441:85;;3094:102:5;;;:::i;4641:153::-;;;;;;:::i;:::-;;:::i;5721:314::-;;;;;;:::i;:::-;;:::i;1096:264:0:-;;;;;;:::i;:::-;;:::i;2684:211::-;;;;;;:::i;:::-;;:::i;1365:334::-;;;;;;:::i;:::-;;:::i;4860:162:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4980:25:5;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4860:162;2321:198:3;;;;;;:::i;:::-;;:::i;1987:344:5:-;2111:4;-1:-1:-1;;;;;;2146:51:5;;-1:-1:-1;;;2146:51:5;;:126;;-1:-1:-1;;;;;;;2213:59:5;;-1:-1:-1;;;2213:59:5;2146:126;:178;;;-1:-1:-1;;;;;;;;;;1168:51:14;;;2288:36:5;2127:197;1987:344;-1:-1:-1;;1987:344:5:o;2932:98::-;2986:13;3018:5;3011:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2932:98;:::o;4407:167::-;4483:7;4502:23;4517:7;4502:14;:23::i;:::-;-1:-1:-1;4543:24:5;;;;:15;:24;;;;;;-1:-1:-1;;;;;4543:24:5;;4407:167::o;3929:417::-;4009:13;4025:34;4051:7;4025:25;:34::i;:::-;4009:50;;4083:5;-1:-1:-1;;;;;4077:11:5;:2;-1:-1:-1;;;;;4077:11:5;;4069:57;;;;-1:-1:-1;;;4069:57:5;;6376:2:17;4069:57:5;;;6358:21:17;6415:2;6395:18;;;6388:30;6454:34;6434:18;;;6427:62;-1:-1:-1;;;6505:18:17;;;6498:31;6546:19;;4069:57:5;;;;;;;;;929:10:11;-1:-1:-1;;;;;4158:21:5;;;;:62;;-1:-1:-1;4183:37:5;4200:5;929:10:11;4860:162:5;:::i;4183:37::-;4137:170;;;;-1:-1:-1;;;4137:170:5;;6778:2:17;4137:170:5;;;6760:21:17;6817:2;6797:18;;;6790:30;6856:34;6836:18;;;6829:62;6927:31;6907:18;;;6900:59;6976:19;;4137:170:5;6576:425:17;4137:170:5;4318:21;4327:2;4331:7;4318:8;:21::i;:::-;3999:347;3929:417;;:::o;1868:83:0:-;1334:13:3;:11;:13::i;:::-;1930:14:0::1;1936:7;1930:5;:14::i;:::-;1868:83:::0;:::o;5084:326:5:-;5273:41;929:10:11;5306:7:5;5273:18;:41::i;:::-;5265:99;;;;-1:-1:-1;;;5265:99:5;;;;;;;:::i;:::-;5375:28;5385:4;5391:2;5395:7;5375:9;:28::i;5476:179::-;5609:39;5626:4;5632:2;5636:7;5609:39;;;;;;;;;;;;:16;:39::i;1704:159:0:-;1782:10;1762:16;1770:7;1762;:16::i;:::-;-1:-1:-1;;;;;1762:30:0;;1754:78;;;;-1:-1:-1;;;1754:78:0;;7622:2:17;1754:78:0;;;7604:21:17;7661:2;7641:18;;;7634:30;7700:34;7680:18;;;7673:62;-1:-1:-1;;;7751:18:17;;;7744:33;7794:19;;1754:78:0;7420:399:17;2651:219:5;2723:7;7402:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7402:16:5;;2785:56;;;;-1:-1:-1;;;2785:56:5;;8026:2:17;2785:56:5;;;8008:21:17;8065:2;8045:18;;;8038:30;-1:-1:-1;;;8084:18:17;;;8077:54;8148:18;;2785:56:5;7824:348:17;2390:204:5;2462:7;-1:-1:-1;;;;;2489:19:5;;2481:73;;;;-1:-1:-1;;;2481:73:5;;8379:2:17;2481:73:5;;;8361:21:17;8418:2;8398:18;;;8391:30;8457:34;8437:18;;;8430:62;-1:-1:-1;;;8508:18:17;;;8501:39;8557:19;;2481:73:5;8177:405:17;2481:73:5;-1:-1:-1;;;;;;2571:16:5;;;;;:9;:16;;;;;;;2390:204::o;2071:101:3:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;3094:102:5:-;3150:13;3182:7;3175:14;;;;;:::i;4641:153::-;4735:52;929:10:11;4768:8:5;4778;4735:18;:52::i;:::-;4641:153;;:::o;5721:314::-;5889:41;929:10:11;5922:7:5;5889:18;:41::i;:::-;5881:99;;;;-1:-1:-1;;;5881:99:5;;;;;;;:::i;:::-;5990:38;6004:4;6010:2;6014:7;6023:4;5990:13;:38::i;:::-;5721:314;;;;:::o;1096:264:0:-;3268:19:4;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:4;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:4;1476:19:10;:23;;;3376:66:4;;-1:-1:-1;3425:12:4;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:4;;8789:2:17;3314:201:4;;;8771:21:17;8828:2;8808:18;;;8801:30;8867:34;8847:18;;;8840:62;-1:-1:-1;;;8918:18:17;;;8911:44;8972:19;;3314:201:4;8587:410:17;3314:201:4;3525:12;:16;;-1:-1:-1;;3525:16:4;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:4;;;;;3551:65;1176:47:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1176:47:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1176:47:0::1;;::::0;:13:::1;:47::i;:::-;1233:25;:23;:25::i;:::-;1268:16;:14;:16::i;:::-;1294:20;:59:::0;;-1:-1:-1;;;;;;1294:59:0::1;-1:-1:-1::0;;;;;1294:59:0;::::1;;::::0;;3636:99:4;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:4;;;3710:14;;-1:-1:-1;9154:36:17;;3710:14:4;;9142:2:17;9127:18;3710:14:4;;;;;;;3258:483;1096:264:0;:::o;2684:211::-;2829:13;2865:23;2880:7;2865:14;:23::i;1365:334::-;1334:13:3;:11;:13::i;:::-;1449:20:0::1;::::0;:38:::1;::::0;-1:-1:-1;;;1449:38:0;;-1:-1:-1;;;;;1697:32:17;;;1449:38:0::1;::::0;::::1;1679:51:17::0;1449:20:0;;::::1;::::0;:34:::1;::::0;1652:18:17;;1449:38:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:93;;;::::0;-1:-1:-1;;;1441:93:0;;9653:2:17;1441:93:0::1;::::0;::::1;9635:21:17::0;9692:2;9672:18;;;9665:30;9731:34;9711:18;;;9704:62;-1:-1:-1;;;9782:18:17;;;9775:40;9832:19;;1441:93:0::1;9451:406:17::0;1441:93:0::1;1544:15;1562:25;:15;929:14:12::0;;838:112;1562:25:0::1;1544:43;;1597:27;:15;1043:19:12::0;;1061:1;1043:19;;;956:123;1597:27:0::1;1634:22;1644:2;1648:7;1634:9;:22::i;:::-;1666:26;1679:7;1688:3;1666:12;:26::i;2321:198:3:-:0;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:3;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:3;;10064:2:17;2401:73:3::1;::::0;::::1;10046:21:17::0;10103:2;10083:18;;;10076:30;10142:34;10122:18;;;10115:62;-1:-1:-1;;;10193:18:17;;;10186:36;10239:19;;2401:73:3::1;9862:402:17::0;2401:73:3::1;2484:28;2503:8;2484:18;:28::i;14004:133:5:-:0;7793:4;7402:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7402:16:5;14077:53;;;;-1:-1:-1;;;14077:53:5;;8026:2:17;14077:53:5;;;8008:21:17;8065:2;8045:18;;;8038:30;-1:-1:-1;;;8084:18:17;;;8077:54;8148:18;;14077:53:5;7824:348:17;13295:182:5;13369:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13369:29:5;-1:-1:-1;;;;;13369:29:5;;;;;;;;:24;;13422:34;13369:24;13422:25;:34::i;:::-;-1:-1:-1;;;;;13413:57:5;;;;;;;;;;;13295:182;;:::o;1599:130:3:-;1513:6;;-1:-1:-1;;;;;1513:6:3;929:10:11;1662:23:3;1654:68;;;;-1:-1:-1;;;1654:68:3;;10471:2:17;1654:68:3;;;10453:21:17;;;10490:18;;;10483:30;10549:34;10529:18;;;10522:62;10601:18;;1654:68:3;10269:356:17;2543:135:0;2651:20;2663:7;2651:11;:20::i;8012:272:5:-;8105:4;8121:13;8137:34;8163:7;8137:25;:34::i;:::-;8121:50;;8200:5;-1:-1:-1;;;;;8189:16:5;:7;-1:-1:-1;;;;;8189:16:5;;:52;;;-1:-1:-1;;;;;;4980:25:5;;;4957:4;4980:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;8209:32;8189:87;;;;8269:7;-1:-1:-1;;;;;8245:31:5;:20;8257:7;8245:11;:20::i;:::-;-1:-1:-1;;;;;8245:31:5;;8189:87;8181:96;8012:272;-1:-1:-1;;;;8012:272:5:o;11928:1255::-;12093:4;-1:-1:-1;;;;;12055:42:5;:34;12081:7;12055:25;:34::i;:::-;-1:-1:-1;;;;;12055:42:5;;12047:92;;;;-1:-1:-1;;;12047:92:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;12157:16:5;;12149:65;;;;-1:-1:-1;;;12149:65:5;;11238:2:17;12149:65:5;;;11220:21:17;11277:2;11257:18;;;11250:30;11316:34;11296:18;;;11289:62;-1:-1:-1;;;11367:18:17;;;11360:34;11411:19;;12149:65:5;11036:400:17;12149:65:5;12225:42;12246:4;12252:2;12256:7;12265:1;12225:20;:42::i;:::-;12405:4;-1:-1:-1;;;;;12367:42:5;:34;12393:7;12367:25;:34::i;:::-;-1:-1:-1;;;;;12367:42:5;;12359:92;;;;-1:-1:-1;;;12359:92:5;;;;;;;:::i;:::-;12520:24;;;;:15;:24;;;;;;;;12513:31;;-1:-1:-1;;;;;;12513:31:5;;;;;;-1:-1:-1;;;;;12988:15:5;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12988:20:5;;;13022:13;;;;;;;;;:18;;12513:31;13022:18;;;13060:16;;;:7;:16;;;;;;:21;;;;;;;;;;13097:27;;12536:7;;13097:27;;;13135:41;13155:4;13161:2;13165:7;13174:1;13135:19;:41::i;2673:187:3:-;2765:6;;;-1:-1:-1;;;;;2781:17:3;;;-1:-1:-1;;;;;;2781:17:3;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;13613:307:5:-;13763:8;-1:-1:-1;;;;;13754:17:5;:5;-1:-1:-1;;;;;13754:17:5;;13746:55;;;;-1:-1:-1;;;13746:55:5;;11643:2:17;13746:55:5;;;11625:21:17;11682:2;11662:18;;;11655:30;11721:27;11701:18;;;11694:55;11766:18;;13746:55:5;11441:349:17;13746:55:5;-1:-1:-1;;;;;13811:25:5;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13811:46:5;;;;;;;;;;13872:41;;540::17;;;13872::5;;513:18:17;13872:41:5;;;;;;;13613:307;;;:::o;6896:305::-;7046:28;7056:4;7062:2;7066:7;7046:9;:28::i;:::-;7092:47;7115:4;7121:2;7125:7;7134:4;7092:22;:47::i;:::-;7084:110;;;;-1:-1:-1;;;7084:110:5;;;;;;;:::i;1605:149::-;5363:13:4;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:4;;;;;;;:::i;:::-;1708:39:5::1;1732:5;1739:7;1708:23;:39::i;396:68:8:-:0;5363:13:4;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:4;;;;;;;:::i;1003:95:3:-;5363:13:4;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:4;;;;;;;:::i;:::-;1065:26:3::1;:24;:26::i;747:608:8:-:0;820:13;845:23;860:7;845:14;:23::i;:::-;879;905:19;;;:10;:19;;;;;879:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:18;955:10;3856:9:5;;;;;;;;;-1:-1:-1;3856:9:5;;;3780:92;955:10:8;934:31;;1044:4;1038:18;1060:1;1038:23;1034:70;;-1:-1:-1;1084:9:8;747:608;-1:-1:-1;;747:608:8:o;1034:70::-;1206:23;;:27;1202:106;;1280:4;1286:9;1263:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1249:48;;;;747:608;;;:::o;1202:106::-;1325:23;1340:7;1325:14;:23::i;8614:108:5:-;8689:26;8699:2;8703:7;8689:26;;;;;;;;;;;;:9;:26::i;1502:214:8:-;7793:4:5;7402:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7402:16:5;1593:75:8;;;;-1:-1:-1;;;1593:75:8;;13329:2:17;1593:75:8;;;13311:21:17;13368:2;13348:18;;;13341:30;13407:34;13387:18;;;13380:62;-1:-1:-1;;;13458:18:17;;;13451:44;13512:19;;1593:75:8;13127:410:17;1593:75:8;1678:19;;;;:10;:19;;;;;:31;1700:9;1678:19;:31;:::i;1934:200::-;2002:20;2014:7;2002:11;:20::i;:::-;2043:19;;;;:10;:19;;;;;2037:33;;;;;:::i;:::-;:38;;-1:-1:-1;2033:95:8;;2098:19;;;;:10;:19;;;;;2091:26;;;:::i;2024:213:0:-;-1:-1:-1;;;;;2165:18:0;;;;:38;;-1:-1:-1;;;;;;2187:16:0;;;2165:38;2157:73;;;;-1:-1:-1;;;2157:73:0;;15948:2:17;2157:73:0;;;15930:21:17;15987:2;15967:18;;;15960:30;-1:-1:-1;;;16006:18:17;;;15999:52;16068:18;;2157:73:0;15746:346:17;2242:295:0;-1:-1:-1;;;;;2377:18:0;;2374:157;;2415:24;;2426:12;;-1:-1:-1;;;;;2415:24:0;;;;;;;;2374:157;;;-1:-1:-1;;;;;2460:16:0;;2456:75;;2496:24;;2507:12;;-1:-1:-1;;;;;2496:24:0;;;;;;;;2242:295;;;;:::o;14689:853:5:-;14838:4;-1:-1:-1;;;;;14858:13:5;;1476:19:10;:23;14854:682:5;;14893:82;;-1:-1:-1;;;14893:82:5;;-1:-1:-1;;;;;14893:47:5;;;;;:82;;929:10:11;;14955:4:5;;14961:7;;14970:4;;14893:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14893:82:5;;;;;;;;-1:-1:-1;;14893:82:5;;;;;;;;;;;;:::i;:::-;;;14889:595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15153:6;:13;15170:1;15153:18;15149:321;;15195:60;;-1:-1:-1;;;15195:60:5;;;;;;;:::i;15149:321::-;15422:6;15416:13;15407:6;15403:2;15399:15;15392:38;14889:595;-1:-1:-1;;;;;;15025:62:5;-1:-1:-1;;;15025:62:5;;-1:-1:-1;15018:69:5;;14854:682;-1:-1:-1;15521:4:5;14689:853;;;;;;:::o;1760:160::-;5363:13:4;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:4;;;;;;;:::i;:::-;1873:5:5::1;:13;1881:5:::0;1873;:13:::1;:::i;:::-;-1:-1:-1::0;1896:7:5::1;:17;1906:7:::0;1896;:17:::1;:::i;1104:111:3:-:0;5363:13:4;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:4;;;;;;;:::i;:::-;1176:32:3::1;929:10:11::0;1176:18:3::1;:32::i;3262:276:5:-:0;3335:13;3360:23;3375:7;3360:14;:23::i;:::-;3394:21;3418:10;3856:9;;;;;;;;;-1:-1:-1;3856:9:5;;;3780:92;3418:10;3394:34;;3469:1;3451:7;3445:21;:25;:86;;;;;;;;;;;;;;;;;3497:7;3506:18;:7;:16;:18::i;:::-;3480:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3445:86;3438:93;3262:276;-1:-1:-1;;;3262:276:5:o;8943:309::-;9067:18;9073:2;9077:7;9067:5;:18::i;:::-;9116:53;9147:1;9151:2;9155:7;9164:4;9116:22;:53::i;:::-;9095:150;;;;-1:-1:-1;;;9095:150:5;;;;;;;:::i;10820:784::-;10879:13;10895:34;10921:7;10895:25;:34::i;:::-;10879:50;;10940:51;10961:5;10976:1;10980:7;10989:1;10940:20;:51::i;:::-;11101:34;11127:7;11101:25;:34::i;:::-;11180:24;;;;:15;:24;;;;;;;;11173:31;;-1:-1:-1;;;;;;11173:31:5;;;;;;-1:-1:-1;;;;;11420:16:5;;;;;:9;:16;;;;;:21;;-1:-1:-1;;11420:21:5;;;11468:16;;;:7;:16;;;;;;11461:23;;;;;;;11500:36;11093:42;;-1:-1:-1;11196:7:5;;11500:36;;11180:24;;11500:36;11547:50;11567:5;11582:1;11586:7;11595:1;11547:19;:50::i;437:707:13:-;493:13;542:14;559:28;581:5;559:21;:28::i;:::-;590:1;559:32;542:49;;605:20;639:6;628:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:18:13;-1:-1:-1;605:41:13;-1:-1:-1;766:28:13;;;782:2;766:28;821:280;-1:-1:-1;;852:5:13;-1:-1:-1;;;986:2:13;975:14;;970:30;852:5;957:44;1045:2;1036:11;;;-1:-1:-1;1065:21:13;821:280;1065:21;-1:-1:-1;1121:6:13;437:707;-1:-1:-1;;;437:707:13:o;9574:920:5:-;-1:-1:-1;;;;;9653:16:5;;9645:61;;;;-1:-1:-1;;;9645:61:5;;17179:2:17;9645:61:5;;;17161:21:17;;;17198:18;;;17191:30;17257:34;17237:18;;;17230:62;17309:18;;9645:61:5;16977:356:17;9645:61:5;7793:4;7402:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7402:16:5;7816:31;9716:58;;;;-1:-1:-1;;;9716:58:5;;17540:2:17;9716:58:5;;;17522:21:17;17579:2;17559:18;;;17552:30;17618;17598:18;;;17591:58;17666:18;;9716:58:5;17338:352:17;9716:58:5;9785:48;9814:1;9818:2;9822:7;9831:1;9785:20;:48::i;:::-;7793:4;7402:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7402:16:5;7816:31;9920:58;;;;-1:-1:-1;;;9920:58:5;;17540:2:17;9920:58:5;;;17522:21:17;17579:2;17559:18;;;17552:30;17618;17598:18;;;17591:58;17666:18;;9920:58:5;17338:352:17;9920:58:5;-1:-1:-1;;;;;10320:13:5;;;;;;:9;:13;;;;;;;;:18;;10337:1;10320:18;;;10359:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10359:21:5;;;;;10396:33;10367:7;;10320:13;;10396:33;;10320:13;;10396:33;10440:47;10468:1;10472:2;10476:7;10485:1;10440:19;:47::i;9900:890:16:-;9953:7;;-1:-1:-1;;;10028:15:16;;10024:99;;-1:-1:-1;;;10063:15:16;;;-1:-1:-1;10106:2:16;10096:12;10024:99;10149:6;10140:5;:15;10136:99;;10184:6;10175:15;;;-1:-1:-1;10218:2:16;10208:12;10136:99;10261:6;10252:5;:15;10248:99;;10296:6;10287:15;;;-1:-1:-1;10330:2:16;10320:12;10248:99;10373:5;10364;:14;10360:96;;10407:5;10398:14;;;-1:-1:-1;10440:1:16;10430:11;10360:96;10482:5;10473;:14;10469:96;;10516:5;10507:14;;;-1:-1:-1;10549:1:16;10539:11;10469:96;10591:5;10582;:14;10578:96;;10625:5;10616:14;;;-1:-1:-1;10658:1:16;10648:11;10578:96;10700:5;10691;:14;10687:64;;10735:1;10725:11;10777:6;9900:890;-1:-1:-1;;9900:890:16:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:17;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:17;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:17:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:17;;1348:180;-1:-1:-1;1348:180:17:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:17;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:17:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;3113:118::-;3199:5;3192:13;3185:21;3178:5;3175:32;3165:60;;3221:1;3218;3211:12;3236:315;3301:6;3309;3362:2;3350:9;3341:7;3337:23;3333:32;3330:52;;;3378:1;3375;3368:12;3330:52;3401:29;3420:9;3401:29;:::i;:::-;3391:39;;3480:2;3469:9;3465:18;3452:32;3493:28;3515:5;3493:28;:::i;:::-;3540:5;3530:15;;;3236:315;;;;;:::o;3556:127::-;3617:10;3612:3;3608:20;3605:1;3598:31;3648:4;3645:1;3638:15;3672:4;3669:1;3662:15;3688:631;3752:5;3782:18;3823:2;3815:6;3812:14;3809:40;;;3829:18;;:::i;:::-;3904:2;3898:9;3872:2;3958:15;;-1:-1:-1;;3954:24:17;;;3980:2;3950:33;3946:42;3934:55;;;4004:18;;;4024:22;;;4001:46;3998:72;;;4050:18;;:::i;:::-;4090:10;4086:2;4079:22;4119:6;4110:15;;4149:6;4141;4134:22;4189:3;4180:6;4175:3;4171:16;4168:25;4165:45;;;4206:1;4203;4196:12;4165:45;4256:6;4251:3;4244:4;4236:6;4232:17;4219:44;4311:1;4304:4;4295:6;4287;4283:19;4279:30;4272:41;;;;3688:631;;;;;:::o;4324:666::-;4419:6;4427;4435;4443;4496:3;4484:9;4475:7;4471:23;4467:33;4464:53;;;4513:1;4510;4503:12;4464:53;4536:29;4555:9;4536:29;:::i;:::-;4526:39;;4584:38;4618:2;4607:9;4603:18;4584:38;:::i;:::-;4574:48;;4669:2;4658:9;4654:18;4641:32;4631:42;;4724:2;4713:9;4709:18;4696:32;4751:18;4743:6;4740:30;4737:50;;;4783:1;4780;4773:12;4737:50;4806:22;;4859:4;4851:13;;4847:27;-1:-1:-1;4837:55:17;;4888:1;4885;4878:12;4837:55;4911:73;4976:7;4971:2;4958:16;4953:2;4949;4945:11;4911:73;:::i;:::-;4901:83;;;4324:666;;;;;;;:::o;4995:524::-;5073:6;5081;5134:2;5122:9;5113:7;5109:23;5105:32;5102:52;;;5150:1;5147;5140:12;5102:52;5173:29;5192:9;5173:29;:::i;:::-;5163:39;;5253:2;5242:9;5238:18;5225:32;5280:18;5272:6;5269:30;5266:50;;;5312:1;5309;5302:12;5266:50;5335:22;;5388:4;5380:13;;5376:27;-1:-1:-1;5366:55:17;;5417:1;5414;5407:12;5366:55;5440:73;5505:7;5500:2;5487:16;5482:2;5478;5474:11;5440:73;:::i;:::-;5430:83;;;4995:524;;;;;:::o;5524:260::-;5592:6;5600;5653:2;5641:9;5632:7;5628:23;5624:32;5621:52;;;5669:1;5666;5659:12;5621:52;5692:29;5711:9;5692:29;:::i;:::-;5682:39;;5740:38;5774:2;5763:9;5759:18;5740:38;:::i;:::-;5730:48;;5524:260;;;;;:::o;5789:380::-;5868:1;5864:12;;;;5911;;;5932:61;;5986:4;5978:6;5974:17;5964:27;;5932:61;6039:2;6031:6;6028:14;6008:18;6005:38;6002:161;;6085:10;6080:3;6076:20;6073:1;6066:31;6120:4;6117:1;6110:15;6148:4;6145:1;6138:15;6002:161;;5789:380;;;:::o;7006:409::-;7208:2;7190:21;;;7247:2;7227:18;;;7220:30;7286:34;7281:2;7266:18;;7259:62;-1:-1:-1;;;7352:2:17;7337:18;;7330:43;7405:3;7390:19;;7006:409::o;9201:245::-;9268:6;9321:2;9309:9;9300:7;9296:23;9292:32;9289:52;;;9337:1;9334;9327:12;9289:52;9369:9;9363:16;9388:28;9410:5;9388:28;:::i;10630:401::-;10832:2;10814:21;;;10871:2;10851:18;;;10844:30;10910:34;10905:2;10890:18;;10883:62;-1:-1:-1;;;10976:2:17;10961:18;;10954:35;11021:3;11006:19;;10630:401::o;11795:414::-;11997:2;11979:21;;;12036:2;12016:18;;;12009:30;12075:34;12070:2;12055:18;;12048:62;-1:-1:-1;;;12141:2:17;12126:18;;12119:48;12199:3;12184:19;;11795:414::o;12214:407::-;12416:2;12398:21;;;12455:2;12435:18;;;12428:30;12494:34;12489:2;12474:18;;12467:62;-1:-1:-1;;;12560:2:17;12545:18;;12538:41;12611:3;12596:19;;12214:407::o;12626:496::-;12805:3;12843:6;12837:13;12859:66;12918:6;12913:3;12906:4;12898:6;12894:17;12859:66;:::i;:::-;12988:13;;12947:16;;;;13010:70;12988:13;12947:16;13057:4;13045:17;;13010:70;:::i;:::-;13096:20;;12626:496;-1:-1:-1;;;;12626:496:17:o;13668:545::-;13770:2;13765:3;13762:11;13759:448;;;13806:1;13831:5;13827:2;13820:17;13876:4;13872:2;13862:19;13946:2;13934:10;13930:19;13927:1;13923:27;13917:4;13913:38;13982:4;13970:10;13967:20;13964:47;;;-1:-1:-1;14005:4:17;13964:47;14060:2;14055:3;14051:12;14048:1;14044:20;14038:4;14034:31;14024:41;;14115:82;14133:2;14126:5;14123:13;14115:82;;;14178:17;;;14159:1;14148:13;14115:82;;;14119:3;;;13668:545;;;:::o;14389:1352::-;14515:3;14509:10;14542:18;14534:6;14531:30;14528:56;;;14564:18;;:::i;:::-;14593:97;14683:6;14643:38;14675:4;14669:11;14643:38;:::i;:::-;14637:4;14593:97;:::i;:::-;14745:4;;14809:2;14798:14;;14826:1;14821:663;;;;15528:1;15545:6;15542:89;;;-1:-1:-1;15597:19:17;;;15591:26;15542:89;-1:-1:-1;;14346:1:17;14342:11;;;14338:24;14334:29;14324:40;14370:1;14366:11;;;14321:57;15644:81;;14791:944;;14821:663;13615:1;13608:14;;;13652:4;13639:18;;-1:-1:-1;;14857:20:17;;;14975:236;14989:7;14986:1;14983:14;14975:236;;;15078:19;;;15072:26;15057:42;;15170:27;;;;15138:1;15126:14;;;;15005:19;;14975:236;;;14979:3;15239:6;15230:7;15227:19;15224:201;;;15300:19;;;15294:26;-1:-1:-1;;15383:1:17;15379:14;;;15395:3;15375:24;15371:37;15367:42;15352:58;15337:74;;15224:201;-1:-1:-1;;;;;15471:1:17;15455:14;;;15451:22;15438:36;;-1:-1:-1;14389:1352:17:o;16097:489::-;-1:-1:-1;;;;;16366:15:17;;;16348:34;;16418:15;;16413:2;16398:18;;16391:43;16465:2;16450:18;;16443:34;;;16513:3;16508:2;16493:18;;16486:31;;;16291:4;;16534:46;;16560:19;;16552:6;16534:46;:::i;:::-;16526:54;16097:489;-1:-1:-1;;;;;;16097:489:17:o;16591:249::-;16660:6;16713:2;16701:9;16692:7;16688:23;16684:32;16681:52;;;16729:1;16726;16719:12;16681:52;16761:9;16755:16;16780:30;16804:5;16780:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "getApproved(uint256)": "081812fc",
    "initialize(address)": "c4d66de8",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "renounceOwnership()": "715018a6",
    "revoke(uint256)": "20c5429b",
    "safeMint(address,string)": "d204c45e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "verificationContract()": "7e222661"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verificationContract\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationContract\",\"outputs\":[{\"internalType\":\"contract IVerification\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFT_Passport.sol\":\"NFT_Passport\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/NFT_Passport.sol\":{\"keccak256\":\"0x841d2d796402b2af0e272be065cd8f6591b5546f9c85b639666aa625bea0f170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a05998ab62ffb3247b755e90bb2b5d3c8f58146eec1e4cee849668c51787e43b\",\"dweb:/ipfs/QmZcwXoXoF2dwTA5bbN6iFjrnNG7b1KuRCuinJF1frCnJv\"]},\"contracts/interfaces/IVerification.sol\":{\"keccak256\":\"0xaaa08d2d2a451828fe7fcee1a8a116fbe2f811d9922a2414cea637856e17fd48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13f1abcb90290be70aba49d80f752ba92a0bd9f551e24cdc6c915e408e084da9\",\"dweb:/ipfs/QmebG7eCnLPCApZWicC6kHaE7cpBAcjRqR56HRZqQ9VLfH\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xac29c453f4cf43afe4c9599374b6e1ed493c18644d814554e8a5969aaa6f3486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c65f7fa11797691a1846fae7f595dd864e76a1cfd5269f535ca17d2abf1645\",\"dweb:/ipfs/QmPYcfz3LrQ9MPMjmSt5HNmRdnrwP4G9t4W8ho9JpgMu7g\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195\",\"dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol\":{\"keccak256\":\"0xbd5c6f8268a1d477f6a746ebedaf7fbcf412186f0c1c54ee104547cfb5e18edd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2723993f3fca4c29408c8a3084ab15ecf54930b58d4888a51b99a020ffe4c897\",\"dweb:/ipfs/QmdTvxnqkMyhZNFXLeHNNbuRPZcY1N4iJhm7YkQdUWVk4r\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Attest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Revoke",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_verificationContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "verificationContract",
          "outputs": [
            {
              "internalType": "contract IVerification",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/NFT_Passport.sol": "NFT_Passport"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/NFT_Passport.sol": {
        "keccak256": "0x841d2d796402b2af0e272be065cd8f6591b5546f9c85b639666aa625bea0f170",
        "urls": [
          "bzz-raw://a05998ab62ffb3247b755e90bb2b5d3c8f58146eec1e4cee849668c51787e43b",
          "dweb:/ipfs/QmZcwXoXoF2dwTA5bbN6iFjrnNG7b1KuRCuinJF1frCnJv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IVerification.sol": {
        "keccak256": "0xaaa08d2d2a451828fe7fcee1a8a116fbe2f811d9922a2414cea637856e17fd48",
        "urls": [
          "bzz-raw://13f1abcb90290be70aba49d80f752ba92a0bd9f551e24cdc6c915e408e084da9",
          "dweb:/ipfs/QmebG7eCnLPCApZWicC6kHaE7cpBAcjRqR56HRZqQ9VLfH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
        "urls": [
          "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
          "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0xac29c453f4cf43afe4c9599374b6e1ed493c18644d814554e8a5969aaa6f3486",
        "urls": [
          "bzz-raw://30c65f7fa11797691a1846fae7f595dd864e76a1cfd5269f535ca17d2abf1645",
          "dweb:/ipfs/QmPYcfz3LrQ9MPMjmSt5HNmRdnrwP4G9t4W8ho9JpgMu7g"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0x2c0b89cef83f353c6f9488c013d8a5968587ffdd6dfc26aad53774214b97e229",
        "urls": [
          "bzz-raw://4a68e662c2a82412308b1feb24f3d61a44b3b8772f44cbd440446237313c3195",
          "dweb:/ipfs/QmfBuWUE2TQef9hghDzzuVkDskw3UGAyPgLmPifTNV7K6g"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol": {
        "keccak256": "0xbd5c6f8268a1d477f6a746ebedaf7fbcf412186f0c1c54ee104547cfb5e18edd",
        "urls": [
          "bzz-raw://2723993f3fca4c29408c8a3084ab15ecf54930b58d4888a51b99a020ffe4c897",
          "dweb:/ipfs/QmdTvxnqkMyhZNFXLeHNNbuRPZcY1N4iJhm7YkQdUWVk4r"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
        "urls": [
          "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
          "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
        "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
        "urls": [
          "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
          "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
        "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
        "urls": [
          "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
          "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/NFT_Passport.sol",
    "id": 235,
    "exportedSymbols": {
      "AddressUpgradeable": [
        2245
      ],
      "ContextUpgradeable": [
        2287
      ],
      "CountersUpgradeable": [
        2361
      ],
      "ERC165Upgradeable": [
        2580
      ],
      "ERC721URIStorageUpgradeable": [
        1934
      ],
      "ERC721Upgradeable": [
        1655
      ],
      "IERC165Upgradeable": [
        2592
      ],
      "IERC721MetadataUpgradeable": [
        1961
      ],
      "IERC721ReceiverUpgradeable": [
        1673
      ],
      "IERC721Upgradeable": [
        1789
      ],
      "IVerification": [
        402
      ],
      "Initializable": [
        703
      ],
      "MathUpgradeable": [
        3457
      ],
      "NFT_Passport": [
        234
      ],
      "OwnableUpgradeable": [
        534
      ],
      "StringsUpgradeable": [
        2536
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2973:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "57:40:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IVerification.sol",
        "file": "./interfaces/IVerification.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 403,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "98:80:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 1656,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "179:101:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 1935,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "281:75:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 535,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "357:75:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 704,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "433:75:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 235,
        "sourceUnit": 2362,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 234,
        "nodeType": "ContractDefinition",
        "src": "510:2387:0",
        "nodes": [
          {
            "id": 21,
            "nodeType": "EventDefinition",
            "src": "623:59:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "e9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a27",
            "name": "Attest",
            "nameLocation": "629:6:0",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "652:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "636:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "673:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "656:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "635:46:0"
            }
          },
          {
            "id": 27,
            "nodeType": "EventDefinition",
            "src": "687:59:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "ec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b",
            "name": "Revoke",
            "nameLocation": "693:6:0",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "716:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "700:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "737:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 27,
                  "src": "720:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "699:46:0"
            }
          },
          {
            "id": 31,
            "nodeType": "UsingForDirective",
            "src": "752:58:0",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28,
              "name": "CountersUpgradeable",
              "nameLocations": [
                "758:19:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2361,
              "src": "758:19:0"
            },
            "typeName": {
              "id": 30,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "782:19:0",
                  "802:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2293,
                "src": "782:27:0"
              },
              "referencedDeclaration": 2293,
              "src": "782:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2293_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 34,
            "nodeType": "VariableDeclaration",
            "src": "816:51:0",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenIdCounter",
            "nameLocation": "852:15:0",
            "scope": 234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$2293_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "816:19:0",
                  "836:7:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2293,
                "src": "816:27:0"
              },
              "referencedDeclaration": 2293,
              "src": "816:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$2293_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 37,
            "nodeType": "VariableDeclaration",
            "src": "873:41:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "7e222661",
            "mutability": "mutable",
            "name": "verificationContract",
            "nameLocation": "894:20:0",
            "scope": 234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVerification_$402",
              "typeString": "contract IVerification"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "IVerification",
                "nameLocations": [
                  "873:13:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 402,
                "src": "873:13:0"
              },
              "referencedDeclaration": 402,
              "src": "873:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVerification_$402",
                "typeString": "contract IVerification"
              }
            },
            "visibility": "public"
          },
          {
            "id": 62,
            "nodeType": "FunctionDefinition",
            "src": "1096:264:0",
            "nodes": [],
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1166:194:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "596f7572536f756c626f756e6450617373706f7274",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1190:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_024ddd226fd083fcdf02efd0729d4bdfb37a0c778cd531781d6c61c02dd1e42d",
                          "typeString": "literal_string \"YourSoulboundPassport\""
                        },
                        "value": "YourSoulboundPassport"
                      },
                      {
                        "hexValue": "5053505254",
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1215:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ff11660161998270b7308d8b6adb5d8e44cb77e70f147b341defc124ab93db3",
                          "typeString": "literal_string \"PSPRT\""
                        },
                        "value": "PSPRT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_024ddd226fd083fcdf02efd0729d4bdfb37a0c778cd531781d6c61c02dd1e42d",
                          "typeString": "literal_string \"YourSoulboundPassport\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ff11660161998270b7308d8b6adb5d8e44cb77e70f147b341defc124ab93db3",
                          "typeString": "literal_string \"PSPRT\""
                        }
                      ],
                      "id": 44,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 768,
                      "src": "1176:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1176:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "1176:47:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49,
                      "name": "__ERC721URIStorage_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "1233:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1233:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1233:25:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 52,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "1268:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:16:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 55,
                      "name": "verificationContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1294:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVerification_$402",
                        "typeString": "contract IVerification"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 57,
                          "name": "_verificationContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39,
                          "src": "1331:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 56,
                        "name": "IVerification",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "1317:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVerification_$402_$",
                          "typeString": "type(contract IVerification)"
                        }
                      },
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1317:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVerification_$402",
                        "typeString": "contract IVerification"
                      }
                    },
                    "src": "1294:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVerification_$402",
                      "typeString": "contract IVerification"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1294:59:0"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41,
                  "name": "initializer",
                  "nameLocations": [
                    "1147:11:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 605,
                  "src": "1147:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1147:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "1105:10:0",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39,
                  "mutability": "mutable",
                  "name": "_verificationContract",
                  "nameLocation": "1124:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1116:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1116:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1115:31:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1166:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101,
            "nodeType": "FunctionDefinition",
            "src": "1365:334:0",
            "nodes": [],
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1431:268:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 74,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "1484:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 72,
                            "name": "verificationContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "1449:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVerification_$402",
                              "typeString": "contract IVerification"
                            }
                          },
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1470:13:0",
                          "memberName": "verifiedUsers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 401,
                          "src": "1449:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 75,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1449:38:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206d696e742070617373706f727420746f204e4f5420766572696669656420757365727321",
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1489:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6439e7d6be980154ce9f8134b037e9623cffa4b3c429f31c617ea6cc16938d4",
                          "typeString": "literal_string \"Can't mint passport to NOT verified users!\""
                        },
                        "value": "Can't mint passport to NOT verified users!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6439e7d6be980154ce9f8134b037e9623cffa4b3c429f31c617ea6cc16938d4",
                          "typeString": "literal_string \"Can't mint passport to NOT verified users!\""
                        }
                      ],
                      "id": 71,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1441:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:93:0"
                },
                {
                  "assignments": [
                    80
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "1552:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 100,
                      "src": "1544:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1544:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 84,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 81,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1562:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2293_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1578:7:0",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2305,
                      "src": "1562:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2293_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$2293_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1544:43:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 85,
                        "name": "_tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1597:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$2293_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1613:9:0",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2319,
                      "src": "1597:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2293_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$2293_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1597:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:27:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "1644:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 92,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1648:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 90,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1218,
                        1247
                      ],
                      "referencedDeclaration": 1218,
                      "src": "1634:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1634:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:22:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 96,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1679:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1688:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 95,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1898,
                      "src": "1666:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:26:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:26:0"
                }
              ]
            },
            "functionSelector": "d204c45e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 68,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1421:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "1421:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1421:9:0"
              }
            ],
            "name": "safeMint",
            "nameLocation": "1374:8:0",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1391:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1383:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "1409:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1395:17:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:31:0"
            },
            "returnParameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 121,
            "nodeType": "FunctionDefinition",
            "src": "1704:159:0",
            "nodes": [],
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1744:119:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 108,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "1770:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 107,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "1762:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1762:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 110,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1782:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1786:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1782:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1762:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e6572206f662074686520746f6b656e2063616e206275726e206974",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5863a59e37721023917065f72ccc9766c60af6dc8c41782147a9cb2547b618b3",
                          "typeString": "literal_string \"Only owner of the token can burn it\""
                        },
                        "value": "Only owner of the token can burn it"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5863a59e37721023917065f72ccc9766c60af6dc8c41782147a9cb2547b618b3",
                          "typeString": "literal_string \"Only owner of the token can burn it\""
                        }
                      ],
                      "id": 106,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1754:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1754:78:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103,
                        "src": "1848:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        217
                      ],
                      "referencedDeclaration": 217,
                      "src": "1842:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:14:0"
                }
              ]
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "1713:4:0",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 103,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1726:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1718:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1717:17:0"
            },
            "returnParameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1744:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 133,
            "nodeType": "FunctionDefinition",
            "src": "1868:83:0",
            "nodes": [],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1920:31:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 129,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "1936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 128,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        217
                      ],
                      "referencedDeclaration": 217,
                      "src": "1930:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1930:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:14:0"
                }
              ]
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 125,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1901:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 448,
                  "src": "1901:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1901:9:0"
              }
            ],
            "name": "revoke",
            "nameLocation": "1877:6:0",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1892:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1884:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1884:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1883:17:0"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1920:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 163,
            "nodeType": "FunctionDefinition",
            "src": "2024:213:0",
            "nodes": [],
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "2147:90:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 146,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "2165:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2181:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2173:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 147,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2173:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2173:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2165:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 152,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "2187:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2201:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2193:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 153,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2193:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2193:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2187:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2165:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c79206275726e696e672026206d696e74696e67",
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2205:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ad8e05c739a3e32db8c07763f4288a9e2ad7e415143809a00c7027c9a6f3e92",
                          "typeString": "literal_string \"only burning & minting\""
                        },
                        "value": "only burning & minting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ad8e05c739a3e32db8c07763f4288a9e2ad7e415143809a00c7027c9a6f3e92",
                          "typeString": "literal_string \"only burning & minting\""
                        }
                      ],
                      "id": 145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2157:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:73:0"
                }
              ]
            },
            "baseFunctions": [
              1621
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2033:20:0",
            "overrides": {
              "id": 143,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2130:8:0"
            },
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2062:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2054:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 137,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2076:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2068:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "2088:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2080:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "2110:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2102:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2053:67:0"
            },
            "returnParameters": {
              "id": 144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2147:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 202,
            "nodeType": "FunctionDefinition",
            "src": "2242:295:0",
            "nodes": [],
            "body": {
              "id": 201,
              "nodeType": "Block",
              "src": "2364:173:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 175,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 165,
                      "src": "2377:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2393:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2385:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2385:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2385:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2377:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 187,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2460:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2474:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2466:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2466:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2466:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2460:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 199,
                    "nodeType": "IfStatement",
                    "src": "2456:75:0",
                    "trueBody": {
                      "id": 198,
                      "nodeType": "Block",
                      "src": "2477:54:0",
                      "statements": [
                        {
                          "eventCall": {
                            "arguments": [
                              {
                                "id": 194,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 167,
                                "src": "2503:2:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 195,
                                "name": "firstTokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 169,
                                "src": "2507:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 193,
                              "name": "Revoke",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "2496:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,uint256)"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2496:24:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 197,
                          "nodeType": "EmitStatement",
                          "src": "2491:29:0"
                        }
                      ]
                    }
                  },
                  "id": 200,
                  "nodeType": "IfStatement",
                  "src": "2374:157:0",
                  "trueBody": {
                    "id": 186,
                    "nodeType": "Block",
                    "src": "2396:54:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 182,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2422:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 183,
                              "name": "firstTokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "2426:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 181,
                            "name": "Attest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "2415:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2415:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "EmitStatement",
                        "src": "2410:29:0"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              1634
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "2251:19:0",
            "overrides": {
              "id": 173,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2347:8:0"
            },
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2279:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2271:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2293:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2285:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2285:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "2305:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2297:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "2327:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 202,
                  "src": "2319:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2270:67:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2364:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 217,
            "nodeType": "FunctionDefinition",
            "src": "2543:135:0",
            "nodes": [],
            "body": {
              "id": 216,
              "nodeType": "Block",
              "src": "2641:37:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 213,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 204,
                        "src": "2663:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 210,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2651:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_Passport_$234_$",
                          "typeString": "type(contract super NFT_Passport)"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2657:5:0",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "2651:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:20:0"
                }
              ]
            },
            "baseFunctions": [
              1391,
              1928
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2552:5:0",
            "overrides": {
              "id": 208,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 206,
                  "name": "ERC721Upgradeable",
                  "nameLocations": [
                    "2593:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1655,
                  "src": "2593:17:0"
                },
                {
                  "id": 207,
                  "name": "ERC721URIStorageUpgradeable",
                  "nameLocations": [
                    "2612:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1934,
                  "src": "2612:27:0"
                }
              ],
              "src": "2584:56:0"
            },
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 204,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2566:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 217,
                  "src": "2558:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2558:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2557:17:0"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2641:0:0"
            },
            "scope": 234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 233,
            "nodeType": "FunctionDefinition",
            "src": "2684:211:0",
            "nodes": [],
            "body": {
              "id": 232,
              "nodeType": "Block",
              "src": "2848:47:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 229,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2880:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 227,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "2865:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFT_Passport_$234_$",
                          "typeString": "type(contract super NFT_Passport)"
                        }
                      },
                      "id": 228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2871:8:0",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1876,
                      "src": "2865:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 226,
                  "id": 231,
                  "nodeType": "Return",
                  "src": "2858:30:0"
                }
              ]
            },
            "baseFunctions": [
              928,
              1876
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2693:8:0",
            "overrides": {
              "id": 223,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 221,
                  "name": "ERC721Upgradeable",
                  "nameLocations": [
                    "2764:17:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1655,
                  "src": "2764:17:0"
                },
                {
                  "id": 222,
                  "name": "ERC721URIStorageUpgradeable",
                  "nameLocations": [
                    "2783:27:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1934,
                  "src": "2783:27:0"
                }
              ],
              "src": "2755:56:0"
            },
            "parameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2710:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2702:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2701:17:0"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 233,
                  "src": "2829:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2829:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2828:15:0"
            },
            "scope": 234,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "Initializable",
              "nameLocations": [
                "535:13:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 703,
              "src": "535:13:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "535:13:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "ERC721Upgradeable",
              "nameLocations": [
                "550:17:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1655,
              "src": "550:17:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "550:17:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "ERC721URIStorageUpgradeable",
              "nameLocations": [
                "569:27:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1934,
              "src": "569:27:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "569:27:0"
          },
          {
            "baseName": {
              "id": 14,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "598:18:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 534,
              "src": "598:18:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "598:18:0"
          }
        ],
        "canonicalName": "NFT_Passport",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          234,
          534,
          1934,
          1655,
          1961,
          1789,
          2580,
          2592,
          2287,
          703
        ],
        "name": "NFT_Passport",
        "nameLocation": "519:12:0",
        "scope": 235,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}